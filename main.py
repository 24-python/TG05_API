import asyncio
import requests
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import Message

from config import TOKEN, API_DOG

bot = Bot(token=TOKEN)
dp = Dispatcher()

def get_dog_breeds():
    url = 'https://api.thedogapi.com/v1/breeds'
    headers = {'x-api-key': API_DOG}
    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ—Ä–æ–¥: {e}")
        return []

def get_dog_breed_image(breed_id):
    url = f'https://api.thedogapi.com/v1/images/search?breed_id={breed_id}'
    headers = {'x-api-key': API_DOG}
    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        data = response.json()
        if data and isinstance(data, list) and 'url' in data[0]:
            return data[0]['url']
    except (requests.exceptions.RequestException, IndexError, KeyError) as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Ä–æ–¥—ã: {e}")
    return None

def get_dog_breed_name(breed_name):
    breeds = get_dog_breeds()
    for breed in breeds:
        if breed['name'].lower() == breed_name.lower():
            return breed
    return None

@dp.message(CommandStart())
async def start_command(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç!\n–Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±–∞–∫ –ø–æ –ø–æ—Ä–æ–¥–µ. –ù–∞–ø–∏—à–∏ –º–Ω–µ –ø–æ—Ä–æ–¥—É —Å–æ–±–∞–∫–∏, –∏ —è –Ω–∞–π–¥—É –µ—ë.')

@dp.message()
async def send_dog_info(message: Message):
    breed_name = message.text.strip()
    breed_info = get_dog_breed_name(breed_name)

    if breed_info:
        dog_image_url = get_dog_breed_image(breed_info['id'])
        if dog_image_url:
            info = (f'üê∂ –ü–æ—Ä–æ–¥–∞: {breed_info["name"]}\n'
                    f'üìÖ –í–æ–∑—Ä–∞—Å—Ç: {breed_info["life_span"]} –ª–µ—Ç\n'
                    f'üìñ –û–ø–∏—Å–∞–Ω–∏–µ: {breed_info.get("description", "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è")}')
            await message.answer_photo(dog_image_url, caption=info)
        else:
            await message.answer('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç—Ç–æ–π –ø–æ—Ä–æ–¥—ã.')
    else:
        await message.answer('–¢–∞–∫–æ–π –ø–æ—Ä–æ–¥—ã –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.')

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
